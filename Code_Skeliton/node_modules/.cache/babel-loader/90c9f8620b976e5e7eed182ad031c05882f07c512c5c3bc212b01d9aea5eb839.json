{"ast":null,"code":"export default {\n  name: \"ShippingCompanyTable\",\n  data() {\n    return {\n      companies: [{\n        code: 0,\n        shortName: \"User\",\n        fullName: \"One\"\n      }, {\n        code: 1,\n        shortName: \"User\",\n        fullName: \"Two\"\n      }, {\n        code: 10,\n        shortName: \"User\",\n        fullName: \"Three\"\n      }, {\n        code: 11,\n        shortName: \"User\",\n        fullName: \"Four\"\n      }, {\n        code: 12,\n        shortName: \"User\",\n        fullName: \"Five\"\n      }, {\n        code: 1,\n        shortName: \"User\",\n        fullName: \"Two\"\n      }, {\n        code: 10,\n        shortName: \"User\",\n        fullName: \"Three\"\n      }, {\n        code: 11,\n        shortName: \"User\",\n        fullName: \"Four\"\n      }, {\n        code: 12,\n        shortName: \"User\",\n        fullName: \"Five\"\n      }, {\n        code: 1,\n        shortName: \"User\",\n        fullName: \"Two\"\n      }, {\n        code: 10,\n        shortName: \"User\",\n        fullName: \"Three\"\n      }, {\n        code: 11,\n        shortName: \"User\",\n        fullName: \"Four\"\n      }, {\n        code: 12,\n        shortName: \"User\",\n        fullName: \"Five\"\n      }, {\n        code: 12,\n        shortName: \"User\",\n        fullName: \"Five\"\n      }, {\n        code: 1,\n        shortName: \"User\",\n        fullName: \"Two\"\n      }, {\n        code: 10,\n        shortName: \"User\",\n        fullName: \"Three\"\n      }, {\n        code: 11,\n        shortName: \"User\",\n        fullName: \"Four\"\n      }, {\n        code: 12,\n        shortName: \"User\",\n        fullName: \"Five\"\n      }, {\n        code: 1,\n        shortName: \"User\",\n        fullName: \"Two\"\n      }, {\n        code: 10,\n        shortName: \"User\",\n        fullName: \"Three\"\n      }, {\n        code: 11,\n        shortName: \"User\",\n        fullName: \"Four\"\n      }, {\n        code: 12,\n        shortName: \"User\",\n        fullName: \"Five\"\n      }, {\n        code: 12,\n        shortName: \"User\",\n        fullName: \"Five\"\n      }, {\n        code: 1,\n        shortName: \"User\",\n        fullName: \"Two\"\n      }, {\n        code: 10,\n        shortName: \"User\",\n        fullName: \"Three\"\n      }, {\n        code: 11,\n        shortName: \"User\",\n        fullName: \"Four\"\n      }, {\n        code: 12,\n        shortName: \"User\",\n        fullName: \"Five\"\n      }, {\n        code: 1,\n        shortName: \"User\",\n        fullName: \"Two\"\n      }, {\n        code: 10,\n        shortName: \"User\",\n        fullName: \"Three\"\n      }, {\n        code: 11,\n        shortName: \"User\",\n        fullName: \"Four\"\n      }, {\n        code: 12,\n        shortName: \"User\",\n        fullName: \"Five\"\n      }],\n      currentPage: 1,\n      itemsPerPage: 15\n    };\n  },\n  computed: {\n    // Calculate the total number of pages based on the number of items and items per page\n    totalPages() {\n      return Math.ceil(this.companies.length / this.itemsPerPage);\n    },\n    // Get the list of companies to display for the current page\n    paginatedCompanies() {\n      const start = (this.currentPage - 1) * this.itemsPerPage;\n      const end = start + this.itemsPerPage;\n      return this.companies.slice(start, end);\n    },\n    // Dynamic data range (e.g., 1-5) and total data (e.g., 5)\n    dataRange() {\n      const start = (this.currentPage - 1) * this.itemsPerPage + 1;\n      const end = Math.min(this.currentPage * this.itemsPerPage, this.companies.length);\n      return `${start} - ${end}`;\n    },\n    totalData() {\n      return this.companies.length;\n    }\n  },\n  methods: {\n    // Navigate to the previous page\n    previousPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n      }\n    },\n    // Navigate to the next page\n    nextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage++;\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","companies","code","shortName","fullName","currentPage","itemsPerPage","computed","totalPages","Math","ceil","length","paginatedCompanies","start","end","slice","dataRange","min","totalData","methods","previousPage","nextPage"],"sources":["D:\\VS_Code\\EMTR\\jgs-assist\\src\\components\\ShippingCompanyTable.vue"],"sourcesContent":["<template>\r\n<div class=\"divBody\">\r\n  <div class=\"divShippingTableContainer\">\r\n    <fieldset class=\"fstShippingFieldset\">\r\n      <h2>EDI Conversion Table</h2>\r\n      <table class=\"divShippingTable\">\r\n        <thead>\r\n          <tr>\r\n            <th>Shipping Company Code</th>\r\n            <th class=\"narrow-column\">Transport Company Abbreviation</th>\r\n            <th>Shipping Company Name</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"(company, index) in paginatedCompanies\" :key=\"index\">\r\n            <td>{{ company.code }}</td>\r\n            <td class=\"narrow-column\">{{ company.shortName }}</td>\r\n            <td>{{ company.fullName }}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      \r\n      <!-- Pagination -->\r\n      <div class=\"divPagination\">\r\n        <button @click=\"previousPage\" :disabled=\"currentPage === 1\">\r\n          <span>&lt;</span>\r\n        </button>\r\n        <span>{{ currentPage }}</span>\r\n        <button @click=\"nextPage\" :disabled=\"currentPage === totalPages\">\r\n          <span>&gt;</span>\r\n        </button>\r\n      </div>\r\n\r\n      <!-- Dynamic table data display -->\r\n      <div class=\"divPaginationInfo\">\r\n        <span>{{ dataRange }} / {{ totalData }}</span>\r\n      </div>\r\n    </fieldset>\r\n  </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"ShippingCompanyTable\",\r\n  data() {\r\n    return {\r\n      companies: [\r\n        { code: 0, shortName: \"User\", fullName: \"One\" },\r\n        { code: 1, shortName: \"User\", fullName: \"Two\" },\r\n        { code: 10, shortName: \"User\", fullName: \"Three\" },\r\n        { code: 11, shortName: \"User\", fullName: \"Four\" },\r\n        { code: 12, shortName: \"User\", fullName: \"Five\" },\r\n        { code: 1, shortName: \"User\", fullName: \"Two\" },\r\n        { code: 10, shortName: \"User\", fullName: \"Three\" },\r\n        { code: 11, shortName: \"User\", fullName: \"Four\" },\r\n        { code: 12, shortName: \"User\", fullName: \"Five\" },\r\n        { code: 1, shortName: \"User\", fullName: \"Two\" },\r\n        { code: 10, shortName: \"User\", fullName: \"Three\" },\r\n        { code: 11, shortName: \"User\", fullName: \"Four\" },\r\n        { code: 12, shortName: \"User\", fullName: \"Five\" },\r\n        { code: 12, shortName: \"User\", fullName: \"Five\" },\r\n        { code: 1, shortName: \"User\", fullName: \"Two\" },\r\n        { code: 10, shortName: \"User\", fullName: \"Three\" },\r\n        { code: 11, shortName: \"User\", fullName: \"Four\" },\r\n        { code: 12, shortName: \"User\", fullName: \"Five\" },\r\n        { code: 1, shortName: \"User\", fullName: \"Two\" },\r\n        { code: 10, shortName: \"User\", fullName: \"Three\" },\r\n        { code: 11, shortName: \"User\", fullName: \"Four\" },\r\n        { code: 12, shortName: \"User\", fullName: \"Five\" },\r\n        { code: 12, shortName: \"User\", fullName: \"Five\" },\r\n        { code: 1, shortName: \"User\", fullName: \"Two\" },\r\n        { code: 10, shortName: \"User\", fullName: \"Three\" },\r\n        { code: 11, shortName: \"User\", fullName: \"Four\" },\r\n        { code: 12, shortName: \"User\", fullName: \"Five\" },\r\n        { code: 1, shortName: \"User\", fullName: \"Two\" },\r\n        { code: 10, shortName: \"User\", fullName: \"Three\" },\r\n        { code: 11, shortName: \"User\", fullName: \"Four\" },\r\n        { code: 12, shortName: \"User\", fullName: \"Five\" },\r\n      ],\r\n      currentPage: 1, \r\n      itemsPerPage: 15, \r\n    };\r\n  },\r\n  computed: {\r\n    // Calculate the total number of pages based on the number of items and items per page\r\n    totalPages() {\r\n      return Math.ceil(this.companies.length / this.itemsPerPage);\r\n    },\r\n    // Get the list of companies to display for the current page\r\n    paginatedCompanies() {\r\n      const start = (this.currentPage - 1) * this.itemsPerPage;\r\n      const end = start + this.itemsPerPage;\r\n      return this.companies.slice(start, end);\r\n    },\r\n    // Dynamic data range (e.g., 1-5) and total data (e.g., 5)\r\n    dataRange() {\r\n      const start = (this.currentPage - 1) * this.itemsPerPage + 1;\r\n      const end = Math.min(this.currentPage * this.itemsPerPage, this.companies.length);\r\n      return `${start} - ${end}`;\r\n    },\r\n    totalData() {\r\n      return this.companies.length;\r\n    }\r\n  },\r\n  methods: {\r\n    // Navigate to the previous page\r\n    previousPage() {\r\n      if (this.currentPage > 1) {\r\n        this.currentPage--;\r\n      }\r\n    },\r\n    // Navigate to the next page\r\n    nextPage() {\r\n      if (this.currentPage < this.totalPages) {\r\n        this.currentPage++;\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}