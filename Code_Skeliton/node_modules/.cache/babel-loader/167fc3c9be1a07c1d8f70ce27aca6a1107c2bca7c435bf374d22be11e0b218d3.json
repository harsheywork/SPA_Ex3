{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, vModelDynamic as _vModelDynamic, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"card\"\n};\nconst _hoisted_3 = {\n  class: \"input-group\"\n};\nconst _hoisted_4 = {\n  class: \"input-group\"\n};\nconst _hoisted_5 = {\n  class: \"password-container\"\n};\nconst _hoisted_6 = [\"type\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[6] || (_cache[6] = _createElementVNode(\"h1\", null, \"SPA\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers((...args) => $options.handleLogin && $options.handleLogin(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_3, [_cache[3] || (_cache[3] = _createElementVNode(\"label\", {\n    class: \"labelLogin\"\n  }, \"Login Account\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.inpLoginAccnt = $event),\n    id: \"inpLoginAccnt\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.inpLoginAccnt]])]), _createElementVNode(\"div\", _hoisted_4, [_cache[4] || (_cache[4] = _createElementVNode(\"label\", {\n    class: \"labelLogin\"\n  }, \"Password\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_5, [_withDirectives(_createElementVNode(\"input\", {\n    type: $data.showPassword ? 'text' : 'password',\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.inpPassword = $event),\n    id: \"inpPassword\",\n    required: \"\"\n  }, null, 8 /* PROPS */, _hoisted_6), [[_vModelDynamic, $data.inpPassword]])])]), _cache[5] || (_cache[5] = _createElementVNode(\"button\", {\n    type: \"submit\",\n    class: \"btn btnLogin\"\n  }, \"LOGIN\", -1 /* HOISTED */))], 32 /* NEED_HYDRATION */)])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","onSubmit","_cache","_withModifiers","args","$options","handleLogin","_hoisted_3","type","$event","$data","inpLoginAccnt","id","required","_hoisted_4","_hoisted_5","showPassword","inpPassword","_hoisted_6"],"sources":["D:\\001_TASKS\\SPA Ex 3\\03_Development\\01_SPA_API_UI\\src\\components\\LoginScreen.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <div class=\"card\">\r\n\r\n      <h1>SPA</h1>\r\n\r\n      <form @submit.prevent=\"handleLogin\">\r\n        <div class=\"input-group\">\r\n          <label class=\"labelLogin\">Login Account</label>\r\n          <input\r\n            type=\"text\"\r\n            v-model=\"inpLoginAccnt\"\r\n            id=\"inpLoginAccnt\"\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div class=\"input-group\">\r\n          <label class=\"labelLogin\">Password</label>\r\n          <div class=\"password-container\">\r\n            <input\r\n              :type=\"showPassword ? 'text' : 'password'\"\r\n              v-model=\"inpPassword\"\r\n              id=\"inpPassword\"\r\n              required\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <button type=\"submit\" class=\"btn btnLogin\">LOGIN</button>\r\n      </form>\r\n\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\n/*Getting API base URL from env variable, http://10.17.1.162:5000/api */\r\nconst baseURL = process.env.VUE_APP_BASE_URL;\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      inpLoginAccnt: \"\",\r\n      inpPassword: \"\",\r\n      showPassword: false,\r\n    };\r\n  },\r\n\r\n  mounted() {\r\n    sessionStorage.removeItem(\"accessTokenInSessn\");\r\n  },\r\n\r\n  methods: {\r\n    handleLogin() {\r\n      this.processLogin();\r\n    },\r\n\r\n    /*Performs authentication using login url, if login is success redirected to the transport translation screen\r\n    If login failed error message will be displayed\r\n    */\r\n    async processLogin() {\r\n\r\n      /*Login url to match with API*/\r\n      const loginUrl = `${baseURL}/login`;\r\n\r\n      /*Collecting credentials given by user*/\r\n      let loginAccValue = `${this.inpLoginAccnt}`;\r\n      let paswdValue = `${this.inpPassword}`;\r\n\r\n      try {\r\n\r\n        /*Sending loginrequest to API with user given credentials*/\r\n        const loginUrlRes = await fetch(loginUrl, {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({\r\n            loginAccount: loginAccValue,\r\n            password: paswdValue,\r\n          }),\r\n        });\r\n\r\n        /*If response of login prcosess is not 200, raising error. \r\n          All errors are handled in catch block only*/\r\n        if (!loginUrlRes.ok) {\r\n          throw new Error(`${loginUrlRes.status}`);\r\n        }\r\n\r\n        /*Once login is successful take the accesstoken from the response and \r\n          setting it in session storage. \r\n          Also redirecting to transport translation vue*/\r\n        const dataFromRes = await loginUrlRes.json();\r\n        if (dataFromRes != null) {\r\n          sessionStorage.setItem(\"accessTokenInSessn\", dataFromRes.accessToken);\r\n          this.$router.push({ name: \"TransportCompanyTranslationTable\" });\r\n        } else {\r\n          throw new Error(\"404\");\r\n        }\r\n      } catch (error) {\r\n        switch (error.message) {\r\n          case \"400\":\r\n            alert(\"Bad request\");\r\n            break;\r\n          case \"401\":\r\n            alert(\"Unauthorised / Incorrect url\");\r\n            break;\r\n          case \"404\":\r\n            alert(\"Invalid credentials\");\r\n            break;\r\n          default:\r\n            alert(\"Error in login process. Unable to connect to the API\");\r\n        }\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: #b2dfdb;\r\n  height: 100vh;\r\n  width: 100vw;\r\n}\r\n\r\n.card {\r\n  background: white;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n  width: 300px;\r\n}\r\n\r\n.card h1 {\r\n  text-align: center;\r\n  color: #1a237e;\r\n  font-size: 34px;\r\n  font-weight: 100;\r\n}\r\n\r\n.input-group {\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.labelLogin {\r\n  display: block;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n#inpLoginAccnt {\r\n  width: 94%;\r\n  padding: 8px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n}\r\n\r\n.password-container {\r\n  position: relative;\r\n}\r\n\r\n#inpPassword {\r\n  width: 86%;\r\n  padding: 8px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n  padding-right: 30px;\r\n}\r\n\r\n.btnLogin {\r\n  float: right;\r\n  width: 26%;\r\n  padding: 10px;\r\n  border-radius: 4px;\r\n}\r\n</style>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAW;;EACfA,KAAK,EAAC;AAAM;;EAKRA,KAAK,EAAC;AAAa;;EAUnBA,KAAK,EAAC;AAAa;;EAEjBA,KAAK,EAAC;AAAoB;mBAnBzC;;uBACEC,mBAAA,CAgCM,OAhCNC,UAgCM,GA/BJC,mBAAA,CA8BM,OA9BNC,UA8BM,G,0BA5BJD,mBAAA,CAAY,YAAR,KAAG,sBAEPA,mBAAA,CAwBO;IAxBAE,QAAM,EAAAC,MAAA,QAAAA,MAAA,MANnBC,cAAA,KAAAC,IAAA,KAM6BC,QAAA,CAAAC,WAAA,IAAAD,QAAA,CAAAC,WAAA,IAAAF,IAAA,CAAW;MAChCL,mBAAA,CAQM,OARNQ,UAQM,G,0BAPJR,mBAAA,CAA+C;IAAxCH,KAAK,EAAC;EAAY,GAAC,eAAa,sB,gBACvCG,mBAAA,CAKE;IAJAS,IAAI,EAAC,MAAM;IAVvB,uBAAAN,MAAA,QAAAA,MAAA,MAAAO,MAAA,IAWqBC,KAAA,CAAAC,aAAa,GAAAF,MAAA;IACtBG,EAAE,EAAC,eAAe;IAClBC,QAAQ,EAAR;iDAFSH,KAAA,CAAAC,aAAa,E,KAM1BZ,mBAAA,CAUM,OAVNe,UAUM,G,0BATJf,mBAAA,CAA0C;IAAnCH,KAAK,EAAC;EAAY,GAAC,UAAQ,sBAClCG,mBAAA,CAOM,OAPNgB,UAOM,G,gBANJhB,mBAAA,CAKE;IAJCS,IAAI,EAAEE,KAAA,CAAAM,YAAY;IArBjC,uBAAAd,MAAA,QAAAA,MAAA,MAAAO,MAAA,IAsBuBC,KAAA,CAAAO,WAAW,GAAAR,MAAA;IACpBG,EAAE,EAAC,aAAa;IAChBC,QAAQ,EAAR;0BAxBdK,UAAA,I,iBAsBuBR,KAAA,CAAAO,WAAW,E,iCAO1BlB,mBAAA,CAAyD;IAAjDS,IAAI,EAAC,QAAQ;IAACZ,KAAK,EAAC;KAAe,OAAK,qB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}