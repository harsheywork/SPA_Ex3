{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.some.js\";\nexport default {\n  name: \"ShippingCompanyTable\",\n  data() {\n    return {\n      companies: [{\n        code: 0,\n        shortName: \"User\",\n        fullName: \"One\"\n      }, {\n        code: 1,\n        shortName: \"User\",\n        fullName: \"Two\"\n      }, {\n        code: 10,\n        shortName: \"User\",\n        fullName: \"Three\"\n      }, {\n        code: 11,\n        shortName: \"User\",\n        fullName: \"Four\"\n      }, {\n        code: 12,\n        shortName: \"User\",\n        fullName: \"Five\"\n      }, {\n        code: 0,\n        shortName: \"User\",\n        fullName: \"One\"\n      }, {\n        code: 1,\n        shortName: \"User\",\n        fullName: \"Two\"\n      }, {\n        code: 10,\n        shortName: \"User\",\n        fullName: \"Three\"\n      }, {\n        code: 11,\n        shortName: \"User\",\n        fullName: \"Four\"\n      }, {\n        code: 12,\n        shortName: \"User\",\n        fullName: \"Five\"\n      }, {\n        code: 0,\n        shortName: \"User\",\n        fullName: \"One\"\n      }, {\n        code: 1,\n        shortName: \"User\",\n        fullName: \"Two\"\n      }, {\n        code: 10,\n        shortName: \"User\",\n        fullName: \"Three\"\n      }, {\n        code: 11,\n        shortName: \"User\",\n        fullName: \"Four\"\n      }, {\n        code: 12,\n        shortName: \"User\",\n        fullName: \"Five\"\n      }, {\n        code: 0,\n        shortName: \"User\",\n        fullName: \"One\"\n      }, {\n        code: 1,\n        shortName: \"User\",\n        fullName: \"Two\"\n      }, {\n        code: 10,\n        shortName: \"User\",\n        fullName: \"Three\"\n      }, {\n        code: 11,\n        shortName: \"User\",\n        fullName: \"Four\"\n      }, {\n        code: 12,\n        shortName: \"User\",\n        fullName: \"Five\"\n      }, {\n        code: 0,\n        shortName: \"User\",\n        fullName: \"One\"\n      }, {\n        code: 1,\n        shortName: \"User\",\n        fullName: \"Two\"\n      }],\n      currentPage: 1,\n      itemsPerPage: 15,\n      menuVisible: false,\n      menuPosition: {\n        x: 0,\n        y: 0\n      },\n      dialogVisible: null,\n      selectedCompany: null,\n      selectedCompanyIndex: -1\n    };\n  },\n  computed: {\n    totalPages() {\n      return Math.ceil(this.companies.length / this.itemsPerPage);\n    },\n    paginatedCompanies() {\n      const start = (this.currentPage - 1) * this.itemsPerPage;\n      const end = start + this.itemsPerPage;\n      return this.companies.slice(start, end);\n    },\n    dataRange() {\n      const start = (this.currentPage - 1) * this.itemsPerPage + 1;\n      const end = Math.min(this.currentPage * this.itemsPerPage, this.companies.length);\n      return `${start} - ${end}`;\n    },\n    totalData() {\n      return this.companies.length;\n    }\n  },\n  methods: {\n    previousPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n      }\n    },\n    nextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage++;\n      }\n    },\n    showMenu(index, event) {\n      this.menuVisible = true;\n      this.menuPosition = {\n        x: event.clientX,\n        y: event.clientY\n      };\n      // adjusting index based on pagination\n      this.selectedCompanyIndex = (this.currentPage - 1) * this.itemsPerPage + index;\n      // select the correct company\n      this.selectedCompany = this.companies[this.selectedCompanyIndex];\n    },\n    openDialog(action, company) {\n      this.dialogVisible = action;\n      this.selectedCompany = {\n        ...company\n      };\n      if (action === \"edit\") {\n        // Clearing full name for editing\n        this.selectedCompany.fullName = \"\";\n      }\n      this.menuVisible = false;\n    },\n    closeDialog() {\n      this.dialogVisible = null;\n    },\n    updateEdit() {\n      // find the company using the correct index\n      const company = this.companies[this.selectedCompanyIndex];\n      if (company && this.selectedCompany.fullName.trim()) {\n        company.fullName = this.selectedCompany.fullName.trim();\n      }\n      this.closeDialog();\n    },\n    confirmDelete() {\n      // Use the selectedCompanyIndex to delete the correct company\n      const index = this.selectedCompanyIndex;\n      if (index !== -1) {\n        this.companies.splice(index, 1);\n        this.closeDialog();\n      }\n    },\n    handleClickOutside(event) {\n      const contextMenu = this.$el.querySelector('.divContextMenu');\n      const shippingCompanyCells = this.$el.querySelectorAll('.shippingCompanyNameColumn');\n\n      // Check if the click was outside the context menu and the shipping company cells\n      if (contextMenu && !contextMenu.contains(event.target) && !Array.from(shippingCompanyCells).some(cell => cell.contains(event.target))) {\n        this.menuVisible = false;\n      }\n    }\n  },\n  mounted() {\n    document.addEventListener('click', this.handleClickOutside);\n  },\n  beforeUnmount() {\n    document.removeEventListener('click', this.handleClickOutside);\n  }\n};","map":{"version":3,"names":["name","data","companies","code","shortName","fullName","currentPage","itemsPerPage","menuVisible","menuPosition","x","y","dialogVisible","selectedCompany","selectedCompanyIndex","computed","totalPages","Math","ceil","length","paginatedCompanies","start","end","slice","dataRange","min","totalData","methods","previousPage","nextPage","showMenu","index","event","clientX","clientY","openDialog","action","company","closeDialog","updateEdit","trim","confirmDelete","splice","handleClickOutside","contextMenu","$el","querySelector","shippingCompanyCells","querySelectorAll","contains","target","Array","from","some","cell","mounted","document","addEventListener","beforeUnmount","removeEventListener"],"sources":["D:/VS_Code/EMTR/jgs-assist/src/assets/js/TransportCompanyConversionTable.js"],"sourcesContent":["export default {\r\n    name: \"ShippingCompanyTable\",\r\n    data() {\r\n        return {\r\n            companies: [\r\n                { code: 0, shortName: \"User\", fullName: \"One\" },\r\n                { code: 1, shortName: \"User\", fullName: \"Two\" },\r\n                { code: 10, shortName: \"User\", fullName: \"Three\" },\r\n                { code: 11, shortName: \"User\", fullName: \"Four\" },\r\n                { code: 12, shortName: \"User\", fullName: \"Five\" },\r\n                { code: 0, shortName: \"User\", fullName: \"One\" },\r\n                { code: 1, shortName: \"User\", fullName: \"Two\" },\r\n                { code: 10, shortName: \"User\", fullName: \"Three\" },\r\n                { code: 11, shortName: \"User\", fullName: \"Four\" },\r\n                { code: 12, shortName: \"User\", fullName: \"Five\" },\r\n                { code: 0, shortName: \"User\", fullName: \"One\" },\r\n                { code: 1, shortName: \"User\", fullName: \"Two\" },\r\n                { code: 10, shortName: \"User\", fullName: \"Three\" },\r\n                { code: 11, shortName: \"User\", fullName: \"Four\" },\r\n                { code: 12, shortName: \"User\", fullName: \"Five\" },\r\n                { code: 0, shortName: \"User\", fullName: \"One\" },\r\n                { code: 1, shortName: \"User\", fullName: \"Two\" },\r\n                { code: 10, shortName: \"User\", fullName: \"Three\" },\r\n                { code: 11, shortName: \"User\", fullName: \"Four\" },\r\n                { code: 12, shortName: \"User\", fullName: \"Five\" },\r\n                { code: 0, shortName: \"User\", fullName: \"One\" },\r\n                { code: 1, shortName: \"User\", fullName: \"Two\" },\r\n            ],\r\n            currentPage: 1,\r\n            itemsPerPage: 15,\r\n            menuVisible: false,\r\n            menuPosition: { x: 0, y: 0 },\r\n            dialogVisible: null,\r\n            selectedCompany: null,\r\n            selectedCompanyIndex: -1,\r\n        };\r\n    },\r\n    computed: {\r\n        totalPages() {\r\n            return Math.ceil(this.companies.length / this.itemsPerPage);\r\n        },\r\n        paginatedCompanies() {\r\n            const start = (this.currentPage - 1) * this.itemsPerPage;\r\n            const end = start + this.itemsPerPage;\r\n            return this.companies.slice(start, end);\r\n        },\r\n        dataRange() {\r\n            const start = (this.currentPage - 1) * this.itemsPerPage + 1;\r\n            const end = Math.min(this.currentPage * this.itemsPerPage, this.companies.length);\r\n            return `${start} - ${end}`;\r\n        },\r\n        totalData() {\r\n            return this.companies.length;\r\n        }\r\n    },\r\n    methods: {\r\n        previousPage() {\r\n            if (this.currentPage > 1) {\r\n                this.currentPage--;\r\n            }\r\n        },\r\n        nextPage() {\r\n            if (this.currentPage < this.totalPages) {\r\n                this.currentPage++;\r\n            }\r\n        },\r\n        showMenu(index, event) {\r\n            this.menuVisible = true;\r\n            this.menuPosition = { x: event.clientX, y: event.clientY };\r\n            // adjusting index based on pagination\r\n            this.selectedCompanyIndex = (this.currentPage - 1) * this.itemsPerPage + index;\r\n            // select the correct company\r\n            this.selectedCompany = this.companies[this.selectedCompanyIndex];\r\n        },\r\n        openDialog(action, company) {\r\n            this.dialogVisible = action;\r\n            this.selectedCompany = { ...company };\r\n            if (action === \"edit\") {\r\n                // Clearing full name for editing\r\n                this.selectedCompany.fullName = \"\";\r\n            }\r\n            this.menuVisible = false;\r\n        },\r\n        closeDialog() {\r\n            this.dialogVisible = null;\r\n        },\r\n        updateEdit() {\r\n            // find the company using the correct index\r\n            const company = this.companies[this.selectedCompanyIndex];\r\n            if (company && this.selectedCompany.fullName.trim()) {\r\n                company.fullName = this.selectedCompany.fullName.trim();\r\n            }\r\n            this.closeDialog();\r\n        },\r\n        confirmDelete() {\r\n            // Use the selectedCompanyIndex to delete the correct company\r\n            const index = this.selectedCompanyIndex;\r\n            if (index !== -1) {\r\n                this.companies.splice(index, 1);\r\n                this.closeDialog();\r\n            }\r\n        },\r\n        handleClickOutside(event) {\r\n            const contextMenu = this.$el.querySelector('.divContextMenu');\r\n            const shippingCompanyCells = this.$el.querySelectorAll('.shippingCompanyNameColumn');\r\n\r\n            // Check if the click was outside the context menu and the shipping company cells\r\n            if (contextMenu && !contextMenu.contains(event.target) && !Array.from(shippingCompanyCells).some(cell => cell.contains(event.target))) {\r\n                this.menuVisible = false;\r\n            }\r\n        }\r\n    },\r\n    mounted() {\r\n        document.addEventListener('click', this.handleClickOutside);\r\n    },\r\n    beforeUnmount() {\r\n        document.removeEventListener('click', this.handleClickOutside);\r\n    }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}