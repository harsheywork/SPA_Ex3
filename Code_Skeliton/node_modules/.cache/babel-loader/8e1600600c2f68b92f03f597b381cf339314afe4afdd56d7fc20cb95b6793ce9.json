{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      loginAccnt: \"\",\n      password: \"\",\n      showPassword: false\n    };\n  },\n  methods: {\n    togglePassword() {\n      this.showPassword = !this.showPassword;\n    },\n    handleLogin() {\n      alert(`Logging in as: ${this.loginAccnt}`);\n    },\n    async processLogin() {\n      let loginAccValue = `${this.loginAccnt}`;\n      let paswdValue = `${this.password}`;\n      const loginUrl = 'http://localhost:5000/api/login';\n      try {\n        const response = await fetch(loginUrl, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            \"loginAccount\": loginAccValue,\n            \"password\": paswdValue\n          })\n        });\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        if (data != null) {\n          console(\"valid Credentials.\" + data.accessToken);\n          this.$router.push({\n            name: 'TransportCompanyConversionTable',\n            params: {\n              accToken: data.accessToken\n            }\n          });\n        } else {\n          alert(\"Invalid Credentials.\");\n        }\n      } catch (error) {\n        console.error('Error during login:', error);\n        alert(\"Invalid Credentials.\");\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","loginAccnt","password","showPassword","methods","togglePassword","handleLogin","alert","processLogin","loginAccValue","paswdValue","loginUrl","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","json","console","accessToken","$router","push","name","params","accToken","error"],"sources":["D:\\VSWorkspace\\jgs-assist\\src\\components\\LoginScreen.vue"],"sourcesContent":["<template>\n  <div style=\"display: flex; justify-content: center; align-items: center; height: 100vh; background-color: #b2dfdb;height: 100vh; width: 100vw;\">\n    <div style=\"background: white; padding: 20px; border-radius: 8px; box-shadow: 0 4px 6px rgba(0,0,0,0.1); width: 300px;\">\n      <h1 style=\"text-align: center; color: #1a237e;\">SPA</h1>\n      <form @submit.prevent=\"handleLogin\">\n        <div style=\"margin-bottom: 10px;\">\n          <label style=\"display: block; margin-bottom: 5px;\">Login Account</label>\n          <input \n            type=\"text\" \n            v-model=\"loginAccnt\" \n            style=\"width: 94%; padding: 8px; border: 1px solid #ccc; border-radius: 4px;\"\n            required\n          />\n        </div>\n        <div style=\"margin-bottom: 10px;\">\n          <label style=\"display: block; margin-bottom: 5px;\">Password</label>\n          <div style=\"position: relative;\">\n            <input \n              :type=\"showPassword ? 'text' : 'password'\"\n              v-model=\"password\" \n              style=\"width: 86%; padding: 8px; border: 1px solid #ccc; border-radius: 4px; padding-right: 30px;\"\n              required\n            />\n            <button \n              type=\"button\" \n              @click=\"togglePassword\" \n              style=\"position: absolute; right: 8px; top: 8px; background: none; border: none; cursor: pointer;\">\n             \n            </button>\n          </div>\n        </div>\n        <button \n          type=\"submit\" \n          style=\"float:right; width: 26%; background: #80cbc4; color: white; padding: 10px; border: none; border-radius: 4px; cursor: pointer;\">\n          LOGIN\n        </button>\n      </form>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      loginAccnt: \"\",\n      password: \"\",\n      showPassword: false\n    };\n  },\n  methods: {\n    togglePassword() {\n      this.showPassword = !this.showPassword;\n    },\n    handleLogin() {\n      alert(`Logging in as: ${this.loginAccnt}`);\n    },\n    async processLogin() {\n      let loginAccValue = `${this.loginAccnt}`\n      let paswdValue = `${this.password}`\n\n      const loginUrl = 'http://localhost:5000/api/login';\n      try {\n          const response = await fetch(loginUrl, {\n                                                method: 'POST',\n                                                headers: {'Content-Type': 'application/json'},\n                                                body: JSON.stringify({\n                                                              \"loginAccount\": loginAccValue,\n\t\t\t \t\t\t\t\t\t\t\t                                        \"password\": paswdValue\n\t\t\t \t\t                                                  }),\n                                                });\n          if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n          }\n        \n          const data = await response.json();\n          if (data != null) {\n            console(\"valid Credentials.\" + data.accessToken);\n            this.$router.push({ name: 'TransportCompanyConversionTable', params: { accToken : data.accessToken } });          \n          } else {\n            alert(\"Invalid Credentials.\");\n          }\n\n        } catch (error) {\n          console.error('Error during login:', error);\n          alert(\"Invalid Credentials.\");\n        }\n      }\n  }\n};\n</script>\n<style>\n  body, html {\n    overflow: hidden;\n    margin: 0;\n    padding: 0;\n  }\n</style>\n"],"mappings":";AA0CA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,UAAU,EAAE,EAAE;MACdC,QAAQ,EAAE,EAAE;MACZC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,cAAcA,CAAA,EAAG;MACf,IAAI,CAACF,YAAW,GAAI,CAAC,IAAI,CAACA,YAAY;IACxC,CAAC;IACDG,WAAWA,CAAA,EAAG;MACZC,KAAK,CAAC,kBAAkB,IAAI,CAACN,UAAU,EAAE,CAAC;IAC5C,CAAC;IACD,MAAMO,YAAYA,CAAA,EAAG;MACnB,IAAIC,aAAY,GAAI,GAAG,IAAI,CAACR,UAAU,EAAC;MACvC,IAAIS,UAAS,GAAI,GAAG,IAAI,CAACR,QAAQ,EAAC;MAElC,MAAMS,QAAO,GAAI,iCAAiC;MAClD,IAAI;QACA,MAAMC,QAAO,GAAI,MAAMC,KAAK,CAACF,QAAQ,EAAE;UACDG,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YAAC,cAAc,EAAE;UAAkB,CAAC;UAC7CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YACP,cAAc,EAAET,aAAa;YACvC,UAAU,EAAEC;UACR,CAAC;QACT,CAAC,CAAC;QACxC,IAAI,CAACE,QAAQ,CAACO,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBR,QAAQ,CAACS,MAAM,EAAE,CAAC;QAC3D;QAEA,MAAMrB,IAAG,GAAI,MAAMY,QAAQ,CAACU,IAAI,CAAC,CAAC;QAClC,IAAItB,IAAG,IAAK,IAAI,EAAE;UAChBuB,OAAO,CAAC,oBAAmB,GAAIvB,IAAI,CAACwB,WAAW,CAAC;UAChD,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;YAAEC,IAAI,EAAE,iCAAiC;YAAEC,MAAM,EAAE;cAAEC,QAAO,EAAI7B,IAAI,CAACwB;YAAY;UAAE,CAAC,CAAC;QACzG,OAAO;UACLjB,KAAK,CAAC,sBAAsB,CAAC;QAC/B;MAEF,EAAE,OAAOuB,KAAK,EAAE;QACdP,OAAO,CAACO,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;QAC3CvB,KAAK,CAAC,sBAAsB,CAAC;MAC/B;IACF;EACJ;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}