{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nconst baseURL = process.env.VUE_APP_BASE_URL;\nexport default {\n  data() {\n    return {\n      inpLoginAccnt: \"\",\n      inpPassword: \"\",\n      showPassword: false\n    };\n  },\n  mounted() {\n    sessionStorage.removeItem('accessToken');\n  },\n  methods: {\n    handleLogin() {\n      this.processLogin();\n    },\n    async processLogin() {\n      const loginUrl = `${baseURL}/login`;\n      let loginAccValue = `${this.inpLoginAccnt}`;\n      let paswdValue = `${this.inpPassword}`;\n      try {\n        const loginUrlRes = await fetch(loginUrl, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            \"loginAccount\": loginAccValue,\n            \"password\": paswdValue\n          })\n        });\n        if (!loginUrlRes.ok) {\n          throw new Error(`HTTP error status: ${loginUrlRes.status}`);\n        }\n        const dataFromRes = await loginUrlRes.json();\n        if (dataFromRes != null) {\n          sessionStorage.setItem('accessToken', dataFromRes.accessToken);\n          this.$router.push({\n            name: 'TransportCompanyTranslationTable'\n          });\n        } else {\n          alert(\"Invalid Credentials\");\n        }\n      } catch (error) {\n        alert(\"Invalid Credentials\");\n      }\n    }\n  }\n};","map":{"version":3,"names":["baseURL","process","env","VUE_APP_BASE_URL","data","inpLoginAccnt","inpPassword","showPassword","mounted","sessionStorage","removeItem","methods","handleLogin","processLogin","loginUrl","loginAccValue","paswdValue","loginUrlRes","fetch","method","headers","body","JSON","stringify","ok","Error","status","dataFromRes","json","setItem","accessToken","$router","push","name","alert","error"],"sources":["D:\\VSWorkspace\\SPA_API_UI\\src\\components\\LoginScreen.vue"],"sourcesContent":["<template>\n  <div class = \"container\">\n    <div class = \"card\">\n      <h1>SPA</h1>\n\n      <form @submit.prevent=\"handleLogin\">\n        <div class=\"input-group\">\n          <label>Login Account</label>\n          <input type=\"text\" v-model=\"inpLoginAccnt\" id=\"inpLoginAccnt\" required />\n        </div>\n\n        <div class=\"input-group\">\n          <label>Password</label>\n          <div class=\"password-container\">\n            <input :type=\"showPassword ? 'text' : 'password'\" v-model=\"inpPassword\" id = \"inpPassword\" required />\n          </div>\n        </div>\n\n        <button type=\"submit\" class=\"btn\">LOGIN</button>\n      </form>\n\n    </div>\n    \n  </div>\n\n</template>\n\n<script>\nconst baseURL = process.env.VUE_APP_BASE_URL;\n\nexport default {\n  data() {\n    return {\n      inpLoginAccnt: \"\",\n      inpPassword: \"\",\n      showPassword: false\n    };\n  },\n\n  mounted() {\n    sessionStorage.removeItem('accessToken');\n  },\n\n  methods: {\n    handleLogin() {\n      this.processLogin()\n    },\n    async processLogin() {\n      const loginUrl = `${baseURL}/login`;\n\n      let loginAccValue = `${this.inpLoginAccnt}`\n      let paswdValue = `${this.inpPassword}`\n\n      try {\n          const loginUrlRes = await fetch(loginUrl, \n                                        {\n                                          method: 'POST',\n                                          headers: {'Content-Type': 'application/json'},\n                                          body: JSON.stringify({\n                                                  \"loginAccount\": loginAccValue,\n                                                  \"password\": paswdValue}),\n                                        });\n          if (!loginUrlRes.ok) {\n            throw new Error(`HTTP error status: ${loginUrlRes.status}`);\n          }\n\n          const dataFromRes = await loginUrlRes.json();\n          if (dataFromRes != null) {\n            sessionStorage.setItem('accessToken', dataFromRes.accessToken);\n            this.$router.push({ name: 'TransportCompanyTranslationTable' });     \n          } else {\n            alert(\"Invalid Credentials\");\n          }\n        } catch (error) {\n          alert(\"Invalid Credentials\");\n        }\n    }\n  }\n};\n</script>\n\n<style>\nbody, html {\n    overflow: hidden;\n    margin: 0;\n    padding: 0;\n    font-family: Arial, sans-serif;\n  }\n\n.container {\n    display: flex; \n    justify-content: center; \n    align-items: center; \n    background-color: #b2dfdb;\n    height: 100vh; \n    width: 100vw;\n}  \n\n.card {\n    background: white; \n    padding: 20px; \n    border-radius: 8px; \n    box-shadow: 0 4px 6px rgba(0,0,0,0.1); \n    width: 300px;\n}\n\n.card h1 {\n    text-align: center; \n    color: #1a237e;\n    font-size: 34px;\n    font-weight: 100;\n}\n\n.input-group {\n    margin-bottom: 10px;\n}\n\nlabel {\n    display: block; \n    margin-bottom: 5px;\n}\n\n#inpLoginAccnt {\n    width: 94%; \n    padding: 8px; \n    border: 1px solid #ccc; \n    border-radius: 4px;\n}\n\n.password-container {\n    position: relative;\n}\n\n#inpPassword {\n    width: 86%; \n    padding: 8px; \n    border: 1px solid #ccc; \n    border-radius: 4px; \n    padding-right: 30px;\n}\n\n.btn{\n    float:right; \n    width: 26%; \n    background: #80cbc4; \n    color: white; \n    padding: 10px; \n    border: none; \n    border-radius: 4px; \n    cursor: pointer;\n}\n</style>"],"mappings":";AA4BA,MAAMA,OAAM,GAAIC,OAAO,CAACC,GAAG,CAACC,gBAAgB;AAE5C,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,aAAa,EAAE,EAAE;MACjBC,WAAW,EAAE,EAAE;MACfC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EAEDC,OAAOA,CAAA,EAAG;IACRC,cAAc,CAACC,UAAU,CAAC,aAAa,CAAC;EAC1C,CAAC;EAEDC,OAAO,EAAE;IACPC,WAAWA,CAAA,EAAG;MACZ,IAAI,CAACC,YAAY,CAAC;IACpB,CAAC;IACD,MAAMA,YAAYA,CAAA,EAAG;MACnB,MAAMC,QAAO,GAAI,GAAGd,OAAO,QAAQ;MAEnC,IAAIe,aAAY,GAAI,GAAG,IAAI,CAACV,aAAa,EAAC;MAC1C,IAAIW,UAAS,GAAI,GAAG,IAAI,CAACV,WAAW,EAAC;MAErC,IAAI;QACA,MAAMW,WAAU,GAAI,MAAMC,KAAK,CAACJ,QAAQ,EACV;UACEK,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YAAC,cAAc,EAAE;UAAkB,CAAC;UAC7CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YACb,cAAc,EAAER,aAAa;YAC7B,UAAU,EAAEC;UAAU,CAAC;QACjC,CAAC,CAAC;QAChC,IAAI,CAACC,WAAW,CAACO,EAAE,EAAE;UACnB,MAAM,IAAIC,KAAK,CAAC,sBAAsBR,WAAW,CAACS,MAAM,EAAE,CAAC;QAC7D;QAEA,MAAMC,WAAU,GAAI,MAAMV,WAAW,CAACW,IAAI,CAAC,CAAC;QAC5C,IAAID,WAAU,IAAK,IAAI,EAAE;UACvBlB,cAAc,CAACoB,OAAO,CAAC,aAAa,EAAEF,WAAW,CAACG,WAAW,CAAC;UAC9D,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;YAAEC,IAAI,EAAE;UAAmC,CAAC,CAAC;QACjE,OAAO;UACLC,KAAK,CAAC,qBAAqB,CAAC;QAC9B;MACF,EAAE,OAAOC,KAAK,EAAE;QACdD,KAAK,CAAC,qBAAqB,CAAC;MAC9B;IACJ;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}