{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nimport \"core-js/modules/esnext.iterator.some.js\";\nexport default {\n  name: \"ShippingCompanyTable\",\n  data() {\n    return {\n      companies: [{\n        code: 0,\n        shortName: \"User\",\n        fullName: \"One\"\n      }, {\n        code: 1,\n        shortName: \"User\",\n        fullName: \"Two\"\n      }\n      // Add more companies as needed\n      ],\n      currentPage: 1,\n      itemsPerPage: 15,\n      menuVisible: false,\n      menuPosition: {\n        x: 0,\n        y: 0\n      },\n      dialogVisible: null,\n      selectedCompany: null\n    };\n  },\n  computed: {\n    totalPages() {\n      return Math.ceil(this.companies.length / this.itemsPerPage);\n    },\n    paginatedCompanies() {\n      const start = (this.currentPage - 1) * this.itemsPerPage;\n      const end = start + this.itemsPerPage;\n      return this.companies.slice(start, end);\n    },\n    dataRange() {\n      const start = (this.currentPage - 1) * this.itemsPerPage + 1;\n      const end = Math.min(this.currentPage * this.itemsPerPage, this.companies.length);\n      return `${start} - ${end}`;\n    },\n    totalData() {\n      return this.companies.length;\n    }\n  },\n  methods: {\n    previousPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n      }\n    },\n    nextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage++;\n      }\n    },\n    showMenu(index, event) {\n      this.menuVisible = true;\n      this.menuPosition = {\n        x: event.clientX,\n        y: event.clientY\n      };\n      this.selectedCompany = this.paginatedCompanies[index];\n    },\n    openDialog(action, company) {\n      this.dialogVisible = action;\n      this.selectedCompany = {\n        ...company\n      };\n      if (action === \"edit\") {\n        this.selectedCompany.fullName = \"\";\n      }\n      this.menuVisible = false;\n    },\n    closeDialog() {\n      this.dialogVisible = null;\n    },\n    updateEdit() {\n      const company = this.companies.find(c => c.code === this.selectedCompany.code);\n      if (company && this.selectedCompany.fullName.trim()) {\n        company.fullName = this.selectedCompany.fullName.trim();\n      }\n      this.closeDialog();\n    },\n    confirmDelete() {\n      this.companies = this.companies.filter(c => c.code !== this.selectedCompany.code);\n      this.closeDialog();\n    },\n    handleClickOutside(event) {\n      const contextMenu = this.$el.querySelector('.context-menu');\n      const shippingCompanyCells = this.$el.querySelectorAll('.shippingComapnyNameColumn');\n      if (contextMenu && !contextMenu.contains(event.target) && !Array.from(shippingCompanyCells).some(cell => cell.contains(event.target))) {\n        this.menuVisible = false;\n      }\n    }\n  },\n  mounted() {\n    document.addEventListener('click', this.handleClickOutside);\n  },\n  beforeUnmount() {\n    document.removeEventListener('click', this.handleClickOutside);\n  }\n};","map":{"version":3,"names":["name","data","companies","code","shortName","fullName","currentPage","itemsPerPage","menuVisible","menuPosition","x","y","dialogVisible","selectedCompany","computed","totalPages","Math","ceil","length","paginatedCompanies","start","end","slice","dataRange","min","totalData","methods","previousPage","nextPage","showMenu","index","event","clientX","clientY","openDialog","action","company","closeDialog","updateEdit","find","c","trim","confirmDelete","filter","handleClickOutside","contextMenu","$el","querySelector","shippingCompanyCells","querySelectorAll","contains","target","Array","from","some","cell","mounted","document","addEventListener","beforeUnmount","removeEventListener"],"sources":["D:\\VS_Code\\EMTR\\jgs-assist\\src\\components\\TransportCompanyConversionTable.vue"],"sourcesContent":["<template>\r\n  <div class=\"divBody\">\r\n    <div class=\"divTransportCompanyTableContainer\">\r\n      <fieldset class=\"fstShippingFieldset\">\r\n        <div>\r\n          <h2 id=\"hdrEDIConversionTable\">EDI Conversion Table</h2>\r\n          <hr class=\"headerLine\" />\r\n        </div>\r\n        <table class=\"tblTransportCompanyTable\">\r\n            <tr>\r\n              <th class=\"shippingCompanyCodeColumn\">Shipping Company Code</th>\r\n              <th class=\"transportCompanyColumn\">Transport Company Abbreviation</th>\r\n              <th class=\"shippingCompanyNameColumn\">Shipping Company Name</th>\r\n            </tr>\r\n          <tbody>\r\n            <tr v-for=\"(company, index) in paginatedCompanies\" :key=\"index\">\r\n              <td class=\"shippingCompanyCodeColumn\">{{ company.code }}</td>\r\n              <td class=\"transportCompanyColumn\">{{ company.shortName }}</td>\r\n              <td \r\n                class=\"shippingComapnyNameColumn\" \r\n                @click=\"showMenu(index, $event)\">\r\n                {{ company.fullName }}\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <!-- Context Menu -->\r\n        <div \r\n          v-if=\"menuVisible\" \r\n          class=\"context-menu\" \r\n          :style=\"{ top: menuPosition.y + 'px', left: menuPosition.x + 'px' }\">\r\n          <ul>\r\n            <li @click=\"openDialog('edit', selectedCompany)\">Edit</li>\r\n            <li @click=\"openDialog('delete', selectedCompany)\">Delete</li>\r\n          </ul>\r\n        </div>\r\n\r\n        <!-- Edit Dialog -->\r\n        <div v-if=\"dialogVisible === 'edit'\" class=\"dialog-overlay\">\r\n          <div class=\"dialog\">\r\n            <h4 id=\"hdrEditHeader\">Shipping Company Conversion Table</h4>\r\n            <hr class=\"dialogHeaderLine\" />\r\n            <label for=\"editName\" id=\"lblShippingCompanyNameDialog\">Shipping Company Name</label>\r\n            <input id=\"txtEditName\" v-model=\"selectedCompany.fullName\" type=\"text\" />\r\n            <button @click=\"updateEdit\" id=\"btnUpdate\">Update</button>\r\n            <button @click=\"closeDialog\" id=\"btnEditCancel\">Cancel</button>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Delete Confirmation Dialog -->\r\n        <div v-if=\"dialogVisible === 'delete'\" class=\"dialog-overlay\">\r\n          <div class=\"dialog\">\r\n           <h4 id=\"hdrDeletionHeader\">Deletion Confirmation</h4>\r\n           <hr class=\"dialogHeaderLine\" />\r\n           <p id=\"txtDeleteName\">{{ selectedCompany.fullName }}</p>\r\n            <button @click=\"confirmDelete\" id=\"btnDelete\">Delete</button>\r\n            <button @click=\"closeDialog\" id=\"btnDeleteCancel\">Cancel</button>\r\n          </div>\r\n        </div>\r\n      \r\n        <!-- Pagination -->\r\n        <div class=\"divPagination\">\r\n          <button @click=\"previousPage\" :disabled=\"currentPage === 1\">\r\n            <span>&lt;</span>\r\n          </button>\r\n          <span>{{ currentPage }}</span>\r\n          <button @click=\"nextPage\" :disabled=\"currentPage === totalPages\">\r\n            <span>&gt;</span>\r\n          </button>\r\n        </div>\r\n\r\n        <!-- Dynamic table data display -->\r\n        <div class=\"divPaginationInfo\">\r\n          <span>{{ dataRange }} / {{ totalData }}</span>\r\n        </div>\r\n      </fieldset>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"ShippingCompanyTable\",\r\n  data() {\r\n    return {\r\n      companies: [\r\n        { code: 0, shortName: \"User\", fullName: \"One\" },\r\n        { code: 1, shortName: \"User\", fullName: \"Two\" },\r\n        // Add more companies as needed\r\n      ],\r\n      currentPage: 1, \r\n      itemsPerPage: 15, \r\n      menuVisible: false,\r\n      menuPosition: { x: 0, y: 0 },\r\n      dialogVisible: null,\r\n      selectedCompany: null,\r\n    };\r\n  },\r\n  computed: {\r\n    totalPages() {\r\n      return Math.ceil(this.companies.length / this.itemsPerPage);\r\n    },\r\n    paginatedCompanies() {\r\n      const start = (this.currentPage - 1) * this.itemsPerPage;\r\n      const end = start + this.itemsPerPage;\r\n      return this.companies.slice(start, end);\r\n    },\r\n    dataRange() {\r\n      const start = (this.currentPage - 1) * this.itemsPerPage + 1;\r\n      const end = Math.min(this.currentPage * this.itemsPerPage, this.companies.length);\r\n      return `${start} - ${end}`;\r\n    },\r\n    totalData() {\r\n      return this.companies.length;\r\n    }\r\n  },\r\n  methods: {\r\n    previousPage() {\r\n      if (this.currentPage > 1) {\r\n        this.currentPage--;\r\n      }\r\n    },\r\n    nextPage() {\r\n      if (this.currentPage < this.totalPages) {\r\n        this.currentPage++;\r\n      }\r\n    },\r\n    showMenu(index, event) {\r\n      this.menuVisible = true;\r\n      this.menuPosition = { x: event.clientX, y: event.clientY };\r\n      this.selectedCompany = this.paginatedCompanies[index];\r\n    },\r\n    openDialog(action, company) {\r\n      this.dialogVisible = action;\r\n      this.selectedCompany = { ...company };\r\n      if (action === \"edit\") {\r\n        this.selectedCompany.fullName = \"\"; \r\n      }\r\n      this.menuVisible = false;\r\n    },\r\n    closeDialog() {\r\n      this.dialogVisible = null;\r\n    },\r\n    updateEdit() {\r\n      const company = this.companies.find((c) => c.code === this.selectedCompany.code);\r\n      if (company && this.selectedCompany.fullName.trim()) {\r\n        company.fullName = this.selectedCompany.fullName.trim();\r\n      }\r\n      this.closeDialog();\r\n    },\r\n    confirmDelete() {\r\n      this.companies = this.companies.filter((c) => c.code !== this.selectedCompany.code);\r\n      this.closeDialog();\r\n    },\r\n    handleClickOutside(event) {\r\n      const contextMenu = this.$el.querySelector('.context-menu');\r\n      const shippingCompanyCells = this.$el.querySelectorAll('.shippingComapnyNameColumn');\r\n      \r\n      if (contextMenu && !contextMenu.contains(event.target) && !Array.from(shippingCompanyCells).some(cell => cell.contains(event.target))) {\r\n        this.menuVisible = false;\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    document.addEventListener('click', this.handleClickOutside);\r\n  },\r\n  beforeUnmount() {\r\n    document.removeEventListener('click', this.handleClickOutside);\r\n  }\r\n};\r\n</script>\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}