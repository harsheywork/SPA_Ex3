{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nexport default {\n  data() {\n    return {\n      isDialogVisible: true,\n      searchType: \"code\",\n      matchType: \"prefix\",\n      searchData: \"\",\n      results: [{\n        code: \"000088\",\n        name: \"User 1\"\n      }, {\n        code: \"100099\",\n        name: \"User 2\"\n      }, {\n        code: \"400100\",\n        name: \"User 3\"\n      }, {\n        code: \"300101\",\n        name: \"User 4\"\n      }, {\n        code: \"600100\",\n        name: \"User 3\"\n      }, {\n        code: \"000099\",\n        name: \"User 2\"\n      }, {\n        code: \"200100\",\n        name: \"User 3\"\n      }, {\n        code: \"000101\",\n        name: \"User 4\"\n      }],\n      searchedResults: []\n    };\n  },\n  mounted() {\n    // Initially display all results in the table\n    this.searchedResults = this.results;\n  },\n  methods: {\n    onSearch() {\n      const data = this.searchData.trim().toLowerCase();\n      if (!data) {\n        // If the search data is empty, reset the results to show all data\n        this.searchedResults = this.results;\n        return;\n      }\n\n      // Filter based on search type and match type\n      this.searchedResults = this.results.filter(item => {\n        const searchField = this.searchType === \"code\" ? item.code : item.name;\n        const lowerSearchField = searchField.toLowerCase();\n\n        // Matching logic\n        if (this.matchType === \"prefix\") {\n          // Check if it starts with the data\n          return lowerSearchField.startsWith(data);\n        } else if (this.matchType === \"partial\") {\n          // Check if it contains the data\n          return lowerSearchField.includes(data);\n        }\n        return false;\n      });\n      console.log(\"Search results:\", this.searchedResults);\n    },\n    onClear() {\n      this.searchData = \"\";\n      // Reset search results to all data\n      this.searchedResults = this.results;\n    },\n    onCancel() {\n      // Closes the dialog\n      this.$emit(\"close\");\n    }\n  }\n};","map":{"version":3,"names":["data","isDialogVisible","searchType","matchType","searchData","results","code","name","searchedResults","mounted","methods","onSearch","trim","toLowerCase","filter","item","searchField","lowerSearchField","startsWith","includes","console","log","onClear","onCancel","$emit"],"sources":["D:/VS_Code/EMTR/jgs-assist/src/assets/js/CustomerDialog.js"],"sourcesContent":["export default {\r\n    data() {\r\n        return {\r\n            isDialogVisible: true,\r\n            searchType: \"code\",\r\n            matchType: \"prefix\",\r\n            searchData: \"\",\r\n            results: [\r\n                { code: \"000088\", name: \"User 1\" },\r\n                { code: \"100099\", name: \"User 2\" },\r\n                { code: \"400100\", name: \"User 3\" },\r\n                { code: \"300101\", name: \"User 4\" },\r\n                { code: \"600100\", name: \"User 3\" },\r\n                { code: \"000099\", name: \"User 2\" },\r\n                { code: \"200100\", name: \"User 3\" },\r\n                { code: \"000101\", name: \"User 4\" },\r\n            ],\r\n            searchedResults: [],\r\n        };\r\n    },\r\n    mounted() {\r\n        // Initially display all results in the table\r\n        this.searchedResults = this.results;\r\n    },\r\n    methods: {\r\n        onSearch() {\r\n            const data = this.searchData.trim().toLowerCase();\r\n            if (!data) {\r\n                // If the search data is empty, reset the results to show all data\r\n                this.searchedResults = this.results;\r\n                return;\r\n            }\r\n\r\n            // Filter based on search type and match type\r\n            this.searchedResults = this.results.filter((item) => {\r\n                const searchField =\r\n                    this.searchType === \"code\" ? item.code : item.name;\r\n                const lowerSearchField = searchField.toLowerCase();\r\n\r\n                // Matching logic\r\n                if (this.matchType === \"prefix\") {\r\n                    // Check if it starts with the data\r\n                    return lowerSearchField.startsWith(data);\r\n                } else if (this.matchType === \"partial\") {\r\n                    // Check if it contains the data\r\n                    return lowerSearchField.includes(data);\r\n                }\r\n                return false;\r\n            });\r\n\r\n            console.log(\"Search results:\", this.searchedResults);\r\n        },\r\n        onClear() {\r\n            this.searchData = \"\";\r\n            // Reset search results to all data\r\n            this.searchedResults = this.results;\r\n        },\r\n        onCancel() {\r\n            // Closes the dialog\r\n            this.$emit(\"close\");\r\n        },\r\n    },\r\n};"],"mappings":";;AAAA,eAAe;EACXA,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,eAAe,EAAE,IAAI;MACrBC,UAAU,EAAE,MAAM;MAClBC,SAAS,EAAE,QAAQ;MACnBC,UAAU,EAAE,EAAE;MACdC,OAAO,EAAE,CACL;QAAEC,IAAI,EAAE,QAAQ;QAAEC,IAAI,EAAE;MAAS,CAAC,EAClC;QAAED,IAAI,EAAE,QAAQ;QAAEC,IAAI,EAAE;MAAS,CAAC,EAClC;QAAED,IAAI,EAAE,QAAQ;QAAEC,IAAI,EAAE;MAAS,CAAC,EAClC;QAAED,IAAI,EAAE,QAAQ;QAAEC,IAAI,EAAE;MAAS,CAAC,EAClC;QAAED,IAAI,EAAE,QAAQ;QAAEC,IAAI,EAAE;MAAS,CAAC,EAClC;QAAED,IAAI,EAAE,QAAQ;QAAEC,IAAI,EAAE;MAAS,CAAC,EAClC;QAAED,IAAI,EAAE,QAAQ;QAAEC,IAAI,EAAE;MAAS,CAAC,EAClC;QAAED,IAAI,EAAE,QAAQ;QAAEC,IAAI,EAAE;MAAS,CAAC,CACrC;MACDC,eAAe,EAAE;IACrB,CAAC;EACL,CAAC;EACDC,OAAOA,CAAA,EAAG;IACN;IACA,IAAI,CAACD,eAAe,GAAG,IAAI,CAACH,OAAO;EACvC,CAAC;EACDK,OAAO,EAAE;IACLC,QAAQA,CAAA,EAAG;MACP,MAAMX,IAAI,GAAG,IAAI,CAACI,UAAU,CAACQ,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;MACjD,IAAI,CAACb,IAAI,EAAE;QACP;QACA,IAAI,CAACQ,eAAe,GAAG,IAAI,CAACH,OAAO;QACnC;MACJ;;MAEA;MACA,IAAI,CAACG,eAAe,GAAG,IAAI,CAACH,OAAO,CAACS,MAAM,CAAEC,IAAI,IAAK;QACjD,MAAMC,WAAW,GACb,IAAI,CAACd,UAAU,KAAK,MAAM,GAAGa,IAAI,CAACT,IAAI,GAAGS,IAAI,CAACR,IAAI;QACtD,MAAMU,gBAAgB,GAAGD,WAAW,CAACH,WAAW,CAAC,CAAC;;QAElD;QACA,IAAI,IAAI,CAACV,SAAS,KAAK,QAAQ,EAAE;UAC7B;UACA,OAAOc,gBAAgB,CAACC,UAAU,CAAClB,IAAI,CAAC;QAC5C,CAAC,MAAM,IAAI,IAAI,CAACG,SAAS,KAAK,SAAS,EAAE;UACrC;UACA,OAAOc,gBAAgB,CAACE,QAAQ,CAACnB,IAAI,CAAC;QAC1C;QACA,OAAO,KAAK;MAChB,CAAC,CAAC;MAEFoB,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAE,IAAI,CAACb,eAAe,CAAC;IACxD,CAAC;IACDc,OAAOA,CAAA,EAAG;MACN,IAAI,CAAClB,UAAU,GAAG,EAAE;MACpB;MACA,IAAI,CAACI,eAAe,GAAG,IAAI,CAACH,OAAO;IACvC,CAAC;IACDkB,QAAQA,CAAA,EAAG;MACP;MACA,IAAI,CAACC,KAAK,CAAC,OAAO,CAAC;IACvB;EACJ;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}