{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"shipping-table-container\"\n};\nconst _hoisted_2 = {\n  class: \"shipping-fieldset\"\n};\nconst _hoisted_3 = {\n  class: \"shipping-table\"\n};\nconst _hoisted_4 = {\n  class: \"pagination\"\n};\nconst _hoisted_5 = [\"disabled\"];\nconst _hoisted_6 = [\"disabled\"];\nconst _hoisted_7 = {\n  class: \"pagination-info\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"fieldset\", _hoisted_2, [_cache[5] || (_cache[5] = _createElementVNode(\"h2\", null, \"EDI Conversion Table\", -1 /* HOISTED */)), _createElementVNode(\"table\", _hoisted_3, [_cache[2] || (_cache[2] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"Shipping Company Code\"), _createElementVNode(\"th\", null, \"Transport Company Abbreviation\"), _createElementVNode(\"th\", null, \"Shipping Company Name\")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", null, [_createCommentVNode(\" Loop through companies based on the current page and items per page \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.paginatedCompanies, (company, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index\n    }, [_createElementVNode(\"td\", null, _toDisplayString(company.code), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(company.shortName), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(company.fullName), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createCommentVNode(\" Pagination controls \"), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.previousPage && $options.previousPage(...args)),\n    disabled: $data.currentPage === 1\n  }, _cache[3] || (_cache[3] = [_createElementVNode(\"span\", null, \"<\", -1 /* HOISTED */)]), 8 /* PROPS */, _hoisted_5), _createElementVNode(\"span\", null, _toDisplayString($data.currentPage), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.nextPage && $options.nextPage(...args)),\n    disabled: $data.currentPage === $options.totalPages\n  }, _cache[4] || (_cache[4] = [_createElementVNode(\"span\", null, \">\", -1 /* HOISTED */)]), 8 /* PROPS */, _hoisted_6)]), _createCommentVNode(\" Dynamic table data display \"), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"span\", null, _toDisplayString($options.dataRange) + \" / \" + _toDisplayString($options.totalData), 1 /* TEXT */)])])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_createCommentVNode","_Fragment","_renderList","$options","paginatedCompanies","company","index","key","_toDisplayString","code","shortName","fullName","_hoisted_4","onClick","_cache","args","previousPage","disabled","$data","currentPage","_hoisted_5","nextPage","totalPages","_hoisted_6","_hoisted_7","dataRange","totalData"],"sources":["D:\\VS_Code\\EMTR\\jgs-assist\\src\\components\\ShippingCompanyTable.vue"],"sourcesContent":["<template>\r\n  <div class=\"shipping-table-container\">\r\n    <fieldset class=\"shipping-fieldset\">\r\n      <h2>EDI Conversion Table</h2>\r\n      <table class=\"shipping-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Shipping Company Code</th>\r\n            <th>Transport Company Abbreviation</th>\r\n            <th>Shipping Company Name</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <!-- Loop through companies based on the current page and items per page -->\r\n          <tr v-for=\"(company, index) in paginatedCompanies\" :key=\"index\">\r\n            <td>{{ company.code }}</td>\r\n            <td>{{ company.shortName }}</td>\r\n            <td>{{ company.fullName }}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      \r\n      <!-- Pagination controls -->\r\n      <div class=\"pagination\">\r\n        <button @click=\"previousPage\" :disabled=\"currentPage === 1\">\r\n          <span>&lt;</span>\r\n        </button>\r\n        <span>{{ currentPage }}</span>\r\n        <button @click=\"nextPage\" :disabled=\"currentPage === totalPages\">\r\n          <span>&gt;</span>\r\n        </button>\r\n      </div>\r\n\r\n      <!-- Dynamic table data display -->\r\n      <div class=\"pagination-info\">\r\n        <span>{{ dataRange }} / {{ totalData }}</span>\r\n      </div>\r\n    </fieldset>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"ShippingCompanyTable\",\r\n  data() {\r\n    return {\r\n      companies: [\r\n        { code: 0, shortName: \"User\", fullName: \"One\" },\r\n        { code: 1, shortName: \"User\", fullName: \"Two\" },\r\n        { code: 10, shortName: \"User\", fullName: \"Three\" },\r\n        { code: 11, shortName: \"User\", fullName: \"Four\" },\r\n        { code: 12, shortName: \"User\", fullName: \"Five\" },\r\n        { code: 1, shortName: \"User\", fullName: \"Two\" },\r\n        { code: 10, shortName: \"User\", fullName: \"Three\" },\r\n        { code: 11, shortName: \"User\", fullName: \"Four\" },\r\n        { code: 12, shortName: \"User\", fullName: \"Five\" },\r\n        { code: 1, shortName: \"User\", fullName: \"Two\" },\r\n        { code: 10, shortName: \"User\", fullName: \"Three\" },\r\n        { code: 11, shortName: \"User\", fullName: \"Four\" },\r\n        { code: 12, shortName: \"User\", fullName: \"Five\" },\r\n        { code: 12, shortName: \"User\", fullName: \"Five\" },\r\n        { code: 1, shortName: \"User\", fullName: \"Two\" },\r\n        { code: 10, shortName: \"User\", fullName: \"Three\" },\r\n        { code: 11, shortName: \"User\", fullName: \"Four\" },\r\n        { code: 12, shortName: \"User\", fullName: \"Five\" },\r\n        { code: 1, shortName: \"User\", fullName: \"Two\" },\r\n        { code: 10, shortName: \"User\", fullName: \"Three\" },\r\n        { code: 11, shortName: \"User\", fullName: \"Four\" },\r\n        { code: 12, shortName: \"User\", fullName: \"Five\" },\r\n        { code: 12, shortName: \"User\", fullName: \"Five\" },\r\n        { code: 1, shortName: \"User\", fullName: \"Two\" },\r\n        { code: 10, shortName: \"User\", fullName: \"Three\" },\r\n        { code: 11, shortName: \"User\", fullName: \"Four\" },\r\n        { code: 12, shortName: \"User\", fullName: \"Five\" },\r\n        { code: 1, shortName: \"User\", fullName: \"Two\" },\r\n        { code: 10, shortName: \"User\", fullName: \"Three\" },\r\n        { code: 11, shortName: \"User\", fullName: \"Four\" },\r\n        { code: 12, shortName: \"User\", fullName: \"Five\" },\r\n      ],\r\n      currentPage: 1, \r\n      itemsPerPage: 15, \r\n    };\r\n  },\r\n  computed: {\r\n    // Calculate the total number of pages based on the number of items and items per page\r\n    totalPages() {\r\n      return Math.ceil(this.companies.length / this.itemsPerPage);\r\n    },\r\n    // Get the list of companies to display for the current page\r\n    paginatedCompanies() {\r\n      const start = (this.currentPage - 1) * this.itemsPerPage;\r\n      const end = start + this.itemsPerPage;\r\n      return this.companies.slice(start, end);\r\n    },\r\n    // Dynamic data range (e.g., 1-5) and total data (e.g., 5)\r\n    dataRange() {\r\n      const start = (this.currentPage - 1) * this.itemsPerPage + 1;\r\n      const end = Math.min(this.currentPage * this.itemsPerPage, this.companies.length);\r\n      return `${start} - ${end}`;\r\n    },\r\n    totalData() {\r\n      return this.companies.length;\r\n    }\r\n  },\r\n  methods: {\r\n    // Navigate to the previous page\r\n    previousPage() {\r\n      if (this.currentPage > 1) {\r\n        this.currentPage--;\r\n      }\r\n    },\r\n    // Navigate to the next page\r\n    nextPage() {\r\n      if (this.currentPage < this.totalPages) {\r\n        this.currentPage++;\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.shipping-table-container {\r\n  font-family: Arial, sans-serif;\r\n  margin: 20px;\r\n}\r\n\r\nh2 {\r\n  position: relative;\r\n  color: #333;\r\n  bottom: 30px;\r\n}\r\n\r\n.shipping-fieldset {\r\n  background-color: white;\r\n  border: 1px solid #ddd;\r\n  padding: 20px;\r\n  margin: 20px 0;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.shipping-table {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  margin: 20px 0;\r\n  position: relative;\r\n  bottom: 30px;\r\n}\r\n\r\n.shipping-table th,\r\n.shipping-table td {\r\n  border: 1px solid #ddd;\r\n  padding: 8px;\r\n}\r\n\r\n.shipping-table th {\r\n  background-color: #008b8bad;\r\n  color: white;\r\n  text-align: center;\r\n}\r\n\r\n.pagination {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-top: 10px;\r\n}\r\n\r\n.pagination button {\r\n  padding: 8px 15px;\r\n  margin: 0 5px;\r\n  cursor: pointer;\r\n  font-size: 16px;\r\n  background-color: white;\r\n  border: 0px solid #ccc;\r\n  border-radius: 5px;\r\n}\r\n\r\n.pagination button:disabled {\r\n  cursor: not-allowed;\r\n  background-color: white;\r\n}\r\n\r\n.pagination button.current-page {\r\n  background-color: #008b8b;\r\n  color: white;\r\n}\r\n\r\n.pagination span {\r\n  font-size: 18px;\r\n  margin: 0 10px;\r\n}\r\n\r\n.pagination-info {\r\n  position: relative;\r\n  bottom: 28px;\r\n  left: 1200px;\r\n}\r\n\r\nlegend {\r\n  font-size: 1.2em;\r\n  font-weight: bold;\r\n  color: #333;\r\n}\r\n</style>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAA0B;;EACzBA,KAAK,EAAC;AAAmB;;EAE1BA,KAAK,EAAC;AAAgB;;EAmBxBA,KAAK,EAAC;AAAY;mBAvB7B;mBAAA;;EAkCWA,KAAK,EAAC;AAAiB;;uBAjChCC,mBAAA,CAqCM,OArCNC,UAqCM,GApCJC,mBAAA,CAmCW,YAnCXC,UAmCW,G,0BAlCTD,mBAAA,CAA6B,YAAzB,sBAAoB,sBACxBA,mBAAA,CAgBQ,SAhBRE,UAgBQ,G,0BAfNF,mBAAA,CAMQ,gBALNA,mBAAA,CAIK,aAHHA,mBAAA,CAA8B,YAA1B,uBAAqB,GACzBA,mBAAA,CAAuC,YAAnC,gCAA8B,GAClCA,mBAAA,CAA8B,YAA1B,uBAAqB,E,wBAG7BA,mBAAA,CAOQ,gBANNG,mBAAA,yEAA4E,G,kBAC5EL,mBAAA,CAIKM,SAAA,QAlBfC,WAAA,CAcyCC,QAAA,CAAAC,kBAAkB,EAd3D,CAcsBC,OAAO,EAAEC,KAAK;yBAA1BX,mBAAA,CAIK;MAJ+CY,GAAG,EAAED;IAAK,IAC5DT,mBAAA,CAA2B,YAAAW,gBAAA,CAApBH,OAAO,CAACI,IAAI,kBACnBZ,mBAAA,CAAgC,YAAAW,gBAAA,CAAzBH,OAAO,CAACK,SAAS,kBACxBb,mBAAA,CAA+B,YAAAW,gBAAA,CAAxBH,OAAO,CAACM,QAAQ,iB;sCAK7BX,mBAAA,yBAA4B,EAC5BH,mBAAA,CAQM,OARNe,UAQM,GAPJf,mBAAA,CAES;IAFAgB,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEZ,QAAA,CAAAa,YAAA,IAAAb,QAAA,CAAAa,YAAA,IAAAD,IAAA,CAAY;IAAGE,QAAQ,EAAEC,KAAA,CAAAC,WAAW;gCAClDtB,mBAAA,CAAiB,cAAX,GAAI,oB,kBAzBpBuB,UAAA,GA2BQvB,mBAAA,CAA8B,cAAAW,gBAAA,CAArBU,KAAA,CAAAC,WAAW,kBACpBtB,mBAAA,CAES;IAFAgB,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEZ,QAAA,CAAAkB,QAAA,IAAAlB,QAAA,CAAAkB,QAAA,IAAAN,IAAA,CAAQ;IAAGE,QAAQ,EAAEC,KAAA,CAAAC,WAAW,KAAKhB,QAAA,CAAAmB;gCACnDzB,mBAAA,CAAiB,cAAX,GAAI,oB,kBA7BpB0B,UAAA,E,GAiCMvB,mBAAA,gCAAmC,EACnCH,mBAAA,CAEM,OAFN2B,UAEM,GADJ3B,mBAAA,CAA8C,cAAAW,gBAAA,CAArCL,QAAA,CAAAsB,SAAS,IAAG,KAAG,GAAAjB,gBAAA,CAAGL,QAAA,CAAAuB,SAAS,iB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}